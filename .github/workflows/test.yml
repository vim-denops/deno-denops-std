name: Test

env:
  DENOPS_PATH: "../denops.vim"

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

on:
  schedule:
    - cron: "0 7 * * 0"
  push:
    branches:
      - main
    paths:
      - "**/*.md"
      - "**/*.ts"
      - "denops_std/modules-lock.json"
      - ".github/workflows/test.yml"
  pull_request:
    branches:
      - main
    paths:
      - "**/*.md"
      - "**/*.ts"
      - "denops_std/modules-lock.json"
      - ".github/workflows/test.yml"

jobs:
  check:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        version:
          - "1.11.0"
          - "1.x"
    runs-on: ${{ matrix.runner }}
    steps:
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@main
        with:
          deno-version: "${{ matrix.version }}"
      - name: Lint check
        run: make lint
      - name: Format check
        run: make fmt-check
      - name: Type check
        run: make type-check

  test:
    strategy:
      matrix:
        runner:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        version:
          - "1.11.0"
          - "1.x"
        host_version:
          - vim: "v8.1.2424"
            nvim: "v0.4.4"
          - vim: "v8.2.3081"
            nvim: "v0.5.0"
    runs-on: ${{ matrix.runner }}
    steps:
      - run: git config --global core.autocrlf false
        if: runner.os == 'Windows'
      - uses: actions/checkout@v2
        with:
          path: "./repo"
      - uses: actions/checkout@v2
        with:
          repository: "vim-denops/denops.vim"
          path: "./denops.vim"
      - uses: denoland/setup-deno@main
        with:
          deno-version: "${{ matrix.version }}"
      - uses: thinca/action-setup-vim@v1
        id: vim
        with:
          vim_type: Vim
          vim_version: "${{ matrix.host_version.vim }}"
        if: matrix.host_version.vim != ''
      - name: Check Vim
        run: |
          echo ${DENOPS_TEST_VIM}
          ${DENOPS_TEST_VIM} --version
        env:
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable }}
        if: matrix.host_version.vim != ''
      - uses: thinca/action-setup-vim@v1
        id: nvim
        with:
          vim_type: Neovim
          vim_version: "${{ matrix.host_version.nvim }}"
        if: matrix.host_version.nvim != ''
      - name: Check Neovim
        run: |
          echo ${DENOPS_TEST_NVIM}
          ${DENOPS_TEST_NVIM} --version
        env:
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable }}
        if: matrix.host_version.nvim != ''
      - name: Test
        working-directory: ./repo
        run: make test
        env:
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable }}
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable }}
        timeout-minutes: 5
